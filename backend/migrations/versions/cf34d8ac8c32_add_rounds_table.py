"""add rounds table

Revision ID: cf34d8ac8c32
Revises: 
Create Date: 2025-05-21 21:16:00.087924

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cf34d8ac8c32'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rounds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rounds_id'), 'rounds', ['id'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.String(), nullable=False),
    sa.Column('token_hash', sa.String(), nullable=False),
    sa.Column('moderator_id', sa.Integer(), nullable=False),
    sa.Column('action_details', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['moderator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_table('token_mappings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token_hash', sa.String(), nullable=False),
    sa.Column('encrypted_user_id', sa.String(), nullable=False),
    sa.Column('round_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=True),
    sa.Column('is_frozen', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_token_mappings_id'), 'token_mappings', ['id'], unique=False)
    op.create_index(op.f('ix_token_mappings_token_hash'), 'token_mappings', ['token_hash'], unique=True)
    op.add_column('messages', sa.Column('is_flagged', sa.Boolean(), nullable=True))
    op.add_column('messages', sa.Column('flag_reason', sa.Text(), nullable=True))
    op.add_column('messages', sa.Column('token_hash', sa.String(), nullable=True))
    op.add_column('users', sa.Column('email', sa.String(), nullable=False))
    op.add_column('users', sa.Column('hashed_password', sa.String(), nullable=False))
    op.add_column('users', sa.Column('banned_until', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.drop_column('users', 'password_hash')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('password_hash', sa.VARCHAR(), nullable=False))
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'banned_until')
    op.drop_column('users', 'hashed_password')
    op.drop_column('users', 'email')
    op.drop_column('messages', 'token_hash')
    op.drop_column('messages', 'flag_reason')
    op.drop_column('messages', 'is_flagged')
    op.drop_index(op.f('ix_token_mappings_token_hash'), table_name='token_mappings')
    op.drop_index(op.f('ix_token_mappings_id'), table_name='token_mappings')
    op.drop_table('token_mappings')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_rounds_id'), table_name='rounds')
    op.drop_table('rounds')
    # ### end Alembic commands ###
